# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-system
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: labs
spec:
  owner: "group:default/mcmuralishclint"
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-component
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: go-clean-code
  description: scaffolded go project
  links:
    - url: https://dashboard.example.com
      title: Admin Setting
      icon: dashboard
  annotations:
    github.com/project-slug: mcmuralishclint/my-go-app
    github.com/actions-workflow: https://github.com/mcmuralishclint/my-go-app/actions
    backstage.io/kubernetes-id: go-clean-code
    circleci.com/project-slug: github/mcmuralishclint/my-go-app
    kibana-url: "http://35.226.244.163:5601/app/dashboards#/view/edf84fe0-e1a0-11e7-b6d5-4dc382ef7f5b?_g=()"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9090"
    prometheus.io/rule: memUsage|component,node_memory_active_bytes|instance,sum by (instance) (node_cpu_seconds_total)
    prometheus.io/alert: "all"
    pagerduty.com/integration-key: 4c280fa2a1094100d0767478390a85d6
    pulumi.com/project-slug: mcmuralishclint/pulumi-cicd/dev
    pulumi.com/orga-slug: mcmuralishclint
spec:
  type: service
  lifecycle: experimental
  owner: "group:default/mcmuralishclint"
  system: marketplace
  providesApis: [api1, api2, api3]
---
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-api
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: api1
spec:
  type: http
  lifecycle: experimental
  owner: "group:default/mcmuralishclint"
  system: marketplace
  definition: |
    openapi: "3.0.0"
    info:
      title: "API 1"
      version: "1.0.0"
    paths:
      /api1:
        get:
          summary: "Endpoint for API 1"
          responses:
            '200':
              description: "Successful response"
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: api2
spec:
  type: http
  lifecycle: experimental
  owner: "group:default/mcmuralishclint"
  system: marketplace
  definition: |
    openapi: "3.0.0"
    info:
      title: "API 2"
      version: "1.0.0"
    paths:
      /api2:
        get:
          summary: "Endpoint for API 2"
          responses:
            '200':
              description: "Successful response"
---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: api3
spec:
  type: http
  lifecycle: experimental
  owner: "group:default/mcmuralishclint"
  system: marketplace
  definition: |
    openapi: "3.0.0"
    info:
      title: "API 3"
      version: "1.0.0"
    paths:
      /api3:
        get:
          summary: "Endpoint for API 3"
          responses:
            '200':
              description: "Successful response"
